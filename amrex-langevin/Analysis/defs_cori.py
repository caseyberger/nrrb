import os
import numpy as np

def extract_parameters(work_dir,input_filename):
	#takes input file generated by AMReX and reads from it the various parameters. 
	#returns a dictionary of all the values
	input_file = work_dir+'/'+input_filename
	fo = open(input_file, "r")
	parameters = dict()
	for line in fo.readlines():
		#print(line)
		if line.startswith("nsteps"):
			temp = line.split()
			parameters["nL"] = int(temp[-1])
		elif line.startswith("n_cell"):
			temp = line.split()
			parameters["Nx"] = int(temp[2])
			parameters["Nt"] = int(temp[-1])
		elif line.startswith("nrrb.l"):
			temp = line.split()
			parameters["lambda"] = float(temp[-1])
		elif line.startswith("nrrb.mu"):
			temp = line.split()
			parameters["mu"] = float(temp[-1])
		elif line.startswith("nrrb.m"):
			temp = line.split()
			parameters["m"] = float(temp[-1])
		elif line.startswith("nrrb.w"):
			temp = line.split()
			if temp[0] == "nrrb.w_t":
				parameters["wtr"] = float(temp[-1])
			else:
				parameters["wz"] = float(temp[-1])
		elif line.startswith("nrrb.dtau"):
			temp = line.split()
			parameters["dt"] = float(temp[-1])
		elif line.startswith("nrrb.eps"):
			temp = line.split()
			parameters["eps"] = float(temp[-1])
	parameters["beta"] = parameters["dt"]*parameters["Nt"]
	fo.close()
	return parameters

def get_raw_data(work_dir, obs_filename):
	obs_file = work_dir+'/'+obs_filename
	f = open(obs_file, "r")
	lines = f.readlines()
	f.close()
	lines = lines[1:]
	Re_field_modulus = []
	Im_field_modulus = []
	Re_density = []
	Im_density = []
	Re_angular_momentum = []
	Im_angular_momentum = []
	Re_action = []
	Im_action = []
	for line in lines:
		line = line.strip('\n')
		temp = line.split(',')
		Re_field_modulus.append(float(temp[1]))
		Im_field_modulus.append(float(temp[2]))
		Re_density.append(float(temp[3]))
		Im_density.append(float(temp[4]))
		Re_angular_momentum.append(float(temp[5]))
		Im_angular_momentum.append(float(temp[6]))
		Re_action.append(float(temp[7]))
		Im_action.append(float(temp[8]))
	data = dict()
	data["Re Phisq"] = Re_field_modulus
	data["Im Phisq"] = Im_field_modulus
	data["Re n"] = Re_density
	data["Im n"] = Im_density
	data["Re Lz"] = Re_angular_momentum
	data["Im Lz"] = Im_angular_momentum
	data["Re S"] = Re_action
	data["Im S"] = Im_action
	return data

def average_observables(work_dir,raw_data,params,Ntherm):
	avg_file = work_dir+"/averaged_observables.csv"
	fo = open(avg_file,"w")
	observables = raw_data.keys()
	parameters = params.keys()
	for p in sorted(parameters):
		fo.write(str(p)+',')
	for obs in sorted(observables):
		fo.write(str(obs)+',')
		fo.write(str(obs)+' err,')
	fo.write("Ntherm")
	fo.write('\n')
	for p in sorted(parameters):
		fo.write(str(params[p])+',')
	for obs in sorted(observables):
		temp = raw_data[obs][Ntherm+1:]
		avg_obs = np.mean(temp)
		sdev_obs = np.std(temp)/np.sqrt(len(temp))
		fo.write(str(avg_obs)+',')
		fo.write(str(sdev_obs)+',')
	fo.write(str(Ntherm))
	fo.write('\n')
	fo.close()

def concatenate_obs_files(curr_dir):
	master_f = open(curr_dir+"/all_averaged_observables.csv",'w')
	master_header = "Nt,Nx,beta,dt,eps,lambda,m,mu,nL,wtr,wz,Im Lz,Im Lz err,Im Phisq,Im Phisq err,Im S,Im S err,Im n,Im n err,Re Lz,Re Lz err,Re Phisq,Re Phisq err,Re S,Re S err,Re n,Re n err,Ntherm\n"
	master_f.write(master_header)
	subdirectories = os.listdir(curr_dir)
	data_directories = []
	for subdir in subdirectories:
		if subdir.startswith("nrrb_data_"):
			files = os.listdir(subdir)
			for file in files:
				if file.startswith("averaged_observables"):
					#print("observable file found")
					f = open(curr_dir+'/'+subdir+'/'+file,'r')
					data = f.readlines()
					f.close()
					if data[0].startswith(master_header):
						#print(data[1])
						master_f.write(data[1])
					else:
						print("Header not correct. Header should be: "+master_header)
						print("Header is instead: "+str(data[0]))
	master_f.close()

